// Helper functions for platform-specific content formatting

/**
 * Formats content for Twitter
 * - Limits to 280 characters
 * - Converts hashtags to lowercase
 */
export const formatForTwitter = (content: string): string => {
  const trimmedContent = content.length > 280 ? content.slice(0, 277) + '...' : content;
  return trimmedContent.replace(/#\w+/g, (match) => match.toLowerCase());
};

/**
 * Formats content for LinkedIn
 * - Supports hashtags and mentions
 * - Adds line breaks for readability
 */
export const formatForLinkedIn = (content: string): string => {
  return content
    .replace(/#\w+/g, (match) => match) // Keep hashtags as is
    .replace(/@\w+/g, (match) => match); // Keep mentions as is
};

/**
 * Formats content for Email
 * - Extracts subject from the first line
 * - Formats the rest as the body
 */
export const formatForEmail = (content: string): { subject: string; body: string } => {
  const [subject, ...bodyLines] = content.split('\n');
  return {
    subject: subject.trim(),
    body: bodyLines.join('\n').trim(),
  };
};

/**
 * Formats content for Articles
 * - Adds title, body structure, and a footer
 */
export const formatForArticle = (content: string): string => {
  return `## Article Title\n\n${content}\n\n---\n\n*Generated by Content Repurposer Tool*`;
};
